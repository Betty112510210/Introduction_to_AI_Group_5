# -*- coding: utf-8 -*-
"""chatgpt_label

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dGhlybmlhhw0l8UOtXhgYU2spVBdSHwp
"""

pip install --upgrade openai

import pandas as pd
import openai
import random
import time

from google.colab import drive
drive.mount('/content/drive')

"""隨機抽100筆"""

input_path = "/content/drive/MyDrive/original_data/@entertain_data.csv"
df = pd.read_csv(input_path, encoding='utf-8')

sample_df = df.sample(n=100, random_state=42).reset_index(drop=True)

output_path = "/content/drive/MyDrive/sample_100.csv"
sample_df.to_csv(output_path, index=False, encoding='utf-8-sig')

print(f"✅ 隨機抽取100筆已存到：{output_path}")

"""仇恨標註、引導式思考"""

import pandas as pd
from tqdm import tqdm
import time
from openai import OpenAI

client = OpenAI(api_key="your_api_key")

def analyze_sentiment(comment):
    prompt = f"""
你是一位專業的網路評論分析師，熟悉 YouTube 留言與網路用語。

仇恨言論（Hate speech）的定義如下：
仇恨言論是指攻擊、貶低、歧視或煽動對特定個人或群體的敵意言論，特別是針對其種族、性別、宗教、性取向、身心障礙、國籍等身份。這些言論可能帶有人身攻擊、激起仇恨、煽動暴力或社會對立，並可能引發閱讀者的負面情緒或社會影響。

請你根據這個定義，判斷下列留言是否屬於仇恨言論。
請只回答「會」或「不會」，不要補充任何說明或理由。

留言：
{comment}

這是仇恨言論嗎？
"""

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0,
        max_tokens=10
    )
    label = response.choices[0].message.content.strip()

    if label in ['會', '不會']:
        return label
    elif label.startswith("不"):
        return "不會"
    elif label.startswith("會"):
        return "會"
    else:
        raise ValueError(f"回覆標籤不正確: {label}")

def process_file(input_path, output_path):
    df = pd.read_csv(input_path, encoding='utf-8')
    df['label'] = None

    for i, comment in enumerate(tqdm(df['Comment'], desc="分析留言是否為仇恨言論")):
        try:
            label = analyze_sentiment(comment)
        except Exception as e:
            print(f"❌ 第{i}筆留言發生錯誤：{e}")
            label = "error"
        df.at[i, 'label'] = label
        time.sleep(1)  # 控制速率，避免 API 限制

    df.to_csv(output_path, index=False, encoding='utf-8-sig')
    print(f"✅ 分析完成並儲存結果至：{output_path}")

# 呼叫範例
input_path = "/content/drive/MyDrive/negative_sample.csv"
output_path = "/content/drive/MyDrive/negative_sample_bully.csv"
process_file(input_path, output_path)

"""仇恨標註，無語境"""

import pandas as pd
from tqdm import tqdm
import time
from openai import OpenAI

client = OpenAI(api_key="your_api_key")

def analyze_sentiment(comment):
    prompt = f"""
你是一位專業的網路評論分析師，請參考 YouTube 留言與網路流行用字，
你是專業的網路評論分析師，
判斷以下留言是否可能造成仇恨言論（Hate speech），
只回覆一個詞：會、不會。
留言：{comment}
"""

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0,
        max_tokens=10
    )
    label = response.choices[0].message.content.strip()

    if label in ['會', '不會']:
        return label
    elif label.startswith("不"):
        return "不會"
    elif label.startswith("會"):
        return "會"
    else:
        raise ValueError(f"回覆標籤不正確: {label}")

def process_file(input_path, output_path):
    df = pd.read_csv(input_path, encoding='utf-8')
    df['label'] = None

    for i, comment in enumerate(tqdm(df['Comment'], desc="分析留言是否為仇恨言論")):
        try:
            label = analyze_sentiment(comment)
        except Exception as e:
            print(f"❌ 第{i}筆留言發生錯誤：{e}")
            label = "error"
        df.at[i, 'label'] = label
        time.sleep(1)  # 控制速率，避免 API 限制

    df.to_csv(output_path, index=False, encoding='utf-8-sig')
    print(f"✅ 分析完成並儲存結果至：{output_path}")

# 呼叫範例
input_path = "/content/drive/MyDrive/negative_sample.csv"
output_path = "/content/drive/MyDrive/negative_sample_bully.csv"
process_file(input_path, output_path)

"""霸凌標註，引導式思考"""

import pandas as pd
from tqdm import tqdm
import time
from openai import OpenAI

client = OpenAI(api_key="your_api_key")

def analyze_cyberbullying(comment):
    prompt = f"""
你是一位熟悉社群媒體與網路文化的評論分析師。

網路霸凌是指透過文字、語氣、表情、諷刺等形式，在網路上攻擊、羞辱、貶低、孤立、排擠或嘲笑某人。這些言論可能不是直接罵人，卻仍造成他人情緒傷害、引發對特定個人的敵意或群體排擠。

- 冷嘲熱諷或語帶攻擊（例如：「好棒棒喔」「真有你的，出來丟臉」）
- 貶低外貌、智商、行為（例如：「看他那德行就知道了」「腦袋有問題吧」）
- 侮辱、攻擊、群嘲（例如：「他這種人活該被罵」「大家都知道他很爛」）
- 用笑話或嘲諷語氣掩飾攻擊意圖

請根據上述定義，判斷以下留言是否屬於網路霸凌。
請只回答「會」或「不會」，不要補充理由或其他文字。

留言：
{comment}

這是網路霸凌嗎？
"""

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0,
        max_tokens=10
    )
    label = response.choices[0].message.content.strip()

    if label in ['會', '不會']:
        return label
    elif label.startswith("不"):
        return "不會"
    elif label.startswith("會"):
        return "會"
    else:
        raise ValueError(f"回覆標籤不正確: {label}")

def process_file(input_path, output_path):
    df = pd.read_csv(input_path, encoding='utf-8')
    df['label'] = None

    for i, comment in enumerate(tqdm(df['Comment'], desc="分析留言是否為網路霸凌")):
        try:
            label = analyze_cyberbullying(comment)
        except Exception as e:
            print(f"❌ 第{i}筆留言發生錯誤：{e}")
            label = "error"
        df.at[i, 'label'] = label
        time.sleep(1)  # 控制速率，避免 API 限制

    df.to_csv(output_path, index=False, encoding='utf-8-sig')
    print(f"✅ 分析完成並儲存結果至：{output_path}")

# 呼叫範例
input_path = "/content/drive/MyDrive/negative_sample.csv"
output_path = "/content/drive/MyDrive/negative_sample_bully.csv"
process_file(input_path, output_path)

import pandas as pd
from tqdm import tqdm
import time
from openai import OpenAI

client = OpenAI(api_key="your_api_key")

def analyze_cyberbullying(comment):
    prompt = f"""
你是一位熟悉社群媒體與網路文化的評論分析師。

請參考 YouTube 留言與網路用語，你是專業的網路評論分析師，判斷以下留言是否可能構成網路霸凌（Cyberbullying），例如冷嘲熱諷、群體攻擊、羞辱或造成情緒傷害。只回覆一個詞：「會」或「不會」。
留言：{comment}
"""

    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0,
        max_tokens=10
    )
    label = response.choices[0].message.content.strip()

    if label in ['會', '不會']:
        return label
    elif label.startswith("不"):
        return "不會"
    elif label.startswith("會"):
        return "會"
    else:
        raise ValueError(f"回覆標籤不正確: {label}")

def process_file(input_path, output_path):
    df = pd.read_csv(input_path, encoding='utf-8')
    df['label'] = None

    for i, comment in enumerate(tqdm(df['Comment'], desc="分析留言是否為網路霸凌")):
        try:
            label = analyze_cyberbullying(comment)
        except Exception as e:
            print(f"❌ 第{i}筆留言發生錯誤：{e}")
            label = "error"
        df.at[i, 'label'] = label
        time.sleep(1)  # 控制速率，避免 API 限制

    df.to_csv(output_path, index=False, encoding='utf-8-sig')
    print(f"✅ 分析完成並儲存結果至：{output_path}")

# 呼叫範例
input_path = "/content/drive/MyDrive/negative_sample.csv"
output_path = "/content/drive/MyDrive/negative_sample_bully.csv"
process_file(input_path, output_path)

"""情緒標註"""

import pandas as pd
from tqdm import tqdm
import time
from openai import OpenAI

client = OpenAI(api_key="your_api_key")

def analyze_sentiment(comment):
    prompt = f"""請參考youtube留言與網路流行用字，你是專業的網路評論分析師，判斷以下留言的情緒，只回覆一個詞：positive、neutral 或 negative。
    留言：{comment}"""
    response = client.chat.completions.create(
        model="gpt-4o",
        messages=[{"role": "user", "content": prompt}],
        temperature=0,
        max_tokens=1
    )
    label = response.choices[0].message.content.strip().lower()
    if label not in ['positive', 'neutral', 'negative']:
        raise ValueError(f"回覆標籤不正確: {label}")
    return label

def process_file(input_path, output_path):
    df = pd.read_csv(input_path, encoding='utf-8')
    df['label'] = None

    for i, comment in enumerate(tqdm(df['Comment'], desc="分析情緒")):
        try:
            label = analyze_sentiment(comment)
        except Exception as e:
            print(f"❌ 第{i}筆留言發生錯誤：{e}")
            label = "error"
        df.at[i, 'label'] = label
        time.sleep(1)  # 控制呼叫速率

    df.to_csv(output_path, index=False, encoding='utf-8-sig')
    print(f"✅ 完成儲存：{output_path}")

# 呼叫範例
input_path = "/content/drive/MyDrive/original_data/@news_data.csv"
output_path = "/content/drive/MyDrive/label_data/@news_data_label.csv"
process_file(input_path, output_path)

"""比對率"""

# 讀取 CSV 檔案
input_path = "/統計比對率 - sample_100 (1).csv"
df = pd.read_csv(input_path, encoding='utf-8')  # 替換為你的檔案名稱

# 比對兩欄是否相同
match_series = df['my_label'] == df['label-4o']

# 計算相同筆數與比率
same_count = match_series.sum()
total_count = len(df)
ratio = same_count / total_count

# 顯示結果
print(f"✅ 相同筆數：{same_count}/{total_count}")
print(f"📊 相同比率：{ratio:.2%}")